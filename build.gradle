buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath 'net.saliman:gradle-cobertura-plugin:2.0.0'
		classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
	}
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'cobertura'
apply plugin: 'com.github.kt3k.coveralls'

repositories {
	jcenter()
}

dependencies {
	compile 'org.apache.httpcomponents:httpmime:4.5.1'
	compile 'org.apache.commons:commons-compress:1.10'
	compile 'org.apache.httpcomponents:httpcore:4.4.4'
	compile 'commons-io:commons-io:2.4'
	compile 'com.google.code.gson:gson:2.4'

	testCompile 'junit:junit:4.12'
	testCompile 'org.mockito:mockito-all:2.0.2-beta'
}

cobertura.coverageFormats = ['html', 'xml']

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives javadocJar, sourcesJar
}

signing {
	required{ isRelease() }
	sign configurations.archives
}

def getRepositoryUsername() {
	return hasProperty('sonatypeUsername') ? sonatypeUsername : System.getenv("SONATYPE_USERNAME")
}

def getRepositoryPassword() {
	return hasProperty('sonatypePassword') ? sonatypePassword : System.getenv("SONATYPE_PASSWORD")
}

def isRelease() {
	return hasProperty('isRelease') ? isRelease == 'true' : false;
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			pom.groupId = "com.testfairy"
			pom.artifactId = "testfairy-uploader"
			pom.version = VERSION + (isRelease() ? '' : '-SNAPSHOT')
			println pom.version

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
			}

			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
			}

			pom.project {
				name 'TestFairy Uploader'
				packaging 'jar'
				artifactId 'testfairy-uploader'
				description 'TestFairy uploader Java library'
				url 'https://www.testfairy.com'

				scm {
					connection 'scm:git:https://github.com/testfairy/testfairy-uploader/'
					developerConnection 'scm:git:https://github.com/testfairy/testfairy-uploader/'
					url 'https://github.com/testfairy/testfairy-uploader/'
				}

				licenses {
					license {
						name 'The Apache License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}

				developers {
					developer {
						id 'gmegidish'
						name 'Gil Megidish'
						email 'gil@testfairy.com'
					}
				}
			}
		}
	}
}

